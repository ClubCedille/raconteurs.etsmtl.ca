name: Docker

on:
  pull_request:
    types: [closed]
    branches:
      - master
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-tag-on-merge:
    if: github.event.pull_request.merged == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get Latest Tag Version
        id: latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          
      - name: Increment Version
        id: new_tag
        run: |
          LATEST_TAG=${{ steps.latest_tag.outputs.latest_tag }}
          NEW_TAG=$(echo $LATEST_TAG | awk -F. '{$NF = $NF + 1;} 1' OFS=.)
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV

      - name: Set Git Config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
  
      - name: Create and Push Git Tag
        run: |
          git tag ${{ steps.new_tag.outputs.new_tag }}
          git push origin ${{ steps.new_tag.outputs.new_tag }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_REPOSITORY }}:latest
            ${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ steps.new_tag.outputs.new_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Refresh Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-on-release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get Tag Version
        id: tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Get Tag Version
        id: tag2
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Version to be used: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ env.VERSION }}
            ${{ secrets.DOCKER_HUB_REPOSITORY }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Refresh Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
